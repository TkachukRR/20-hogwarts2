{"mappings":"AAWO,MAAMA,EAAa,IAX1B,MACEC,QAAQC,GACN,OAAOC,MAAMD,GAAKE,MAAMC,IACtB,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MAAM,G,GCNfC,EAAO,CAChBC,cAAeC,SAASC,eAAe,YCD9BC,EAAgB,CAEzBC,KAAM,CACFC,YAAa,OACbC,YAAY,EACZC,cAAc,GAElBC,YAAa,CACTH,YAAa,gBACbC,YAAY,EACZC,cAAc,GAElBE,MAAO,CACHJ,YAAa,QACbC,YAAY,EACZC,cAAc,GAElBG,OAAQ,CACJL,YAAa,SACbC,YAAY,EACZC,cAAc,GAElBI,SAAU,CACNN,YAAa,WACbC,YAAY,EACZC,cAAc,GAElBK,gBAAiB,CACbP,YAAa,mBACbC,YAAY,EACZC,aAAc,gBAElBM,cAAe,CACXR,YAAa,mBACbC,YAAY,EACZC,cAAc,GAElBO,WAAW,GC3BR,MAAMC,EAAS,IAVtB,MACIC,+BAA+BC,EAAMC,EAAKC,GACtCF,EAAKG,SAASC,IACLH,EAAII,SAASD,EAAGF,KAAoB,GAAXE,EAAGF,IAC7BD,EAAIK,KAAKF,EAAGF,GAAK,G,aCKjC,MACEK,eACE,MAGMC,EAKN,SAAmCR,EAAMC,EAAKQ,GAC5C,MAAMD,EAAyB,GAmB/B,OAjBAP,EAAIE,SAASO,IACX,GAAIA,EAASC,eAAeF,GAAQ,CAClC,MAAMnB,aAAEA,EAAYF,YAAEA,GAAgBsB,EAEtC,GAA4B,kBAAjBpB,EACTkB,EAAuBI,QAAQtB,QAC1B,GAAoB,GAAhBA,EAAsB,CAC/B,MAAMY,EAAMd,EAAYyB,cACxBf,EAAOC,+BACLC,EACAQ,EACAN,E,MAMDM,C,CAxBPM,OAJiB1C,EAAWC,QCXlB,gDDYmB0C,OAAOC,OAAO9B,GAGa,iBACxD,GACI+B,EAuCP,gCAvCgDT,EA2B1CU,KACEC,IAAe,+HE7CSC,EFqD9BD,EEpDMC,EACJC,oBACAC,OACAC,MAAM,KACNL,KAAI,CAACM,EAAMC,IACD,GAATA,EAAaD,EAAOA,EAAK,GAAGE,cAAgBF,EAAKG,MAAM,KAExDC,KAAK,QF6CPT,oCErDE,IAA4BC,CFuD/B,IAAAQ,KAAA,WAGA9C,EAAoCC,cAAA8C,UAAA,GAAAZ,G,iBAIjCjC,SAAA8C,cAAA,iBAEHC,iBAAsB,SAAQC,K,SAG1BA,G,GAEO,WAAPA,EAAAC,OAAOC,W,SASsBF,G,EAC5BG,cAAAC,iBAAA,UAAAjC,SAAAkC,IACJL,EAAAC,OAAAK,UAAAC,SAAA,WAEDF,EAASC,UAAAE,OAAkB,SAAO,G,EAZ/BC,CAAAT,GAeJ,SAAAA,GACFA,EAAAC,OAAAK,UAAAI,OAAA,SAED,CAjBKC,CAAAX,E,CANCY,CAAUZ,EAAO,G,OGvDvBa,EAAe,IAPf,MACItC,qBACUuC,EAAcC,SACpBD,EAAcE,e,GCJrB,iBACOH,EAAIE,QACX,EAFA","sources":["src/utils/getApiData.js","src/constants/root.js","src/constants/pageSettings.js","src/utils/arrayHelper.js","src/components/FilterButtons/FilterButtons.js","src/constants/api.js","src/utils/getCamelcaseString.js","src/components/App/App.js","src/index.js"],"sourcesContent":["class GetApiData {\r\n  getData(url) {\r\n    return fetch(url).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.status);\r\n      }\r\n      return response.json();\r\n    });\r\n  }\r\n}\r\n\r\nexport const getApiData = new GetApiData();","export const REFS = {\r\n    filterButtons: document.getElementById('buttons'),\r\n\r\n}","export const PAGE_SETTINGS = {\r\n\r\n    name: { \r\n        tableHeader: \"Name\",\r\n        sortButton: true,\r\n        filterButton: false, //boolean or button name\r\n    },\r\n    dateOfBirth: {\r\n        tableHeader: \"Date of birth\",\r\n        sortButton: true,\r\n        filterButton: false,\r\n    },\r\n    house: {\r\n        tableHeader: \"House\",\r\n        sortButton: true,\r\n        filterButton: true, //boolean or button name\r\n    },\r\n    wizard: {\r\n        tableHeader: \"Wizard\",\r\n        sortButton: false,\r\n        filterButton: false, //boolean or button name\r\n    },\r\n    ancestry: {\r\n        tableHeader: \"Ancestry\",\r\n        sortButton: false,\r\n        filterButton: false, //boolean or button name\r\n    },\r\n    hogwartsStudent: {\r\n        tableHeader: \"Is student/staff\",\r\n        sortButton: false,\r\n        filterButton: \"All students\", //boolean or button name\r\n    },\r\n    hogwartsStaff: {\r\n        tableHeader: \"Is student/staff\",\r\n        sortButton: false,\r\n        filterButton: false, //boolean or button name\r\n    },\r\n    favorites: true,\r\n\r\n};\r\n","class Arr {\r\n    addElementToArrayFromDataByKey(data, arr, key) {\r\n        data.forEach((el) => {\r\n            if (!arr.includes(el[key]) && el[key] != false) {\r\n                arr.push(el[key])\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const newArr = new Arr()","import { API_URL, URL_STUDENTS, URL_HOUSE } from \"../../constants/api\";\r\nimport { getApiData } from \"../../utils/getApiData\";\r\nimport { REFS } from \"../../constants/root\";\r\nimport { PAGE_SETTINGS } from \"../../constants/pageSettings\";\r\nimport { newArr } from \"../../utils/arrayHelper\";\r\nimport { getCamelcaseString } from \"../../utils/getCamelcaseString\";\r\n\r\nimport \"./FilterButtons.scss\";\r\n\r\nclass FilterButtons {\r\n  async render() {\r\n    const data = await getApiData.getData(API_URL);\r\n    const arrPageSettingsObjects = Object.values(PAGE_SETTINGS);\r\n\r\n    const arrayFilterButtonNames =\r\n      getFilterButtonNamesArray(data, arrPageSettingsObjects, \"filterButton\") ||\r\n      [];\r\n    const buttonsListMarkup = getButtonsListMarkup(arrayFilterButtonNames);\r\n\r\n    function getFilterButtonNamesArray(data, arr, param) {\r\n      const arrayFilterButtonNames = [];\r\n\r\n      arr.forEach((elelment) => {\r\n        if (elelment.hasOwnProperty(param)) {\r\n          const { filterButton, tableHeader } = elelment;\r\n\r\n          if (typeof filterButton !== \"boolean\") {\r\n            arrayFilterButtonNames.unshift(filterButton);\r\n          } else if (filterButton == true) {\r\n            const key = tableHeader.toLowerCase();\r\n            newArr.addElementToArrayFromDataByKey(\r\n              data,\r\n              arrayFilterButtonNames,\r\n              key\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      return arrayFilterButtonNames;\r\n    }\r\n\r\n    function getButtonsListMarkup(arrayBtnNames) {\r\n      const buttonsItemsMarkup = arrayBtnNames\r\n        .map(\r\n          (buttonName) => `\r\n                <li class=\"filter__item\">\r\n                    <button class=\"btn filter__button\" data-description=\"${getCamelcaseString(buttonName)}\">${buttonName}</button>\r\n                </li>`\r\n        )\r\n        .join(\"\");\r\n\r\n      return `<ul class=\"btn filter__list\">${buttonsItemsMarkup}</ul>`;\r\n    }\r\n\r\n    REFS.filterButtons.innerHTML = `${buttonsListMarkup}`;\r\n  }\r\n  eventListener() {\r\n    const list = document.querySelector(\".filter__list\");\r\n\r\n    list.addEventListener(\"click\", (event) => {\r\n      onButtonClick(event);\r\n    });\r\n\r\n    function onButtonClick(event) {\r\n      if (event.target.localName === \"button\") {\r\n        removeActiveClassFommButtons(event);\r\n        toggleActiveClass(event);\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    function removeActiveClassFommButtons(event) {\r\n      event.currentTarget.querySelectorAll(\"button\").forEach((e) => {\r\n        if (event.target.classList.contains(\"active\")) {\r\n          return;\r\n        }\r\n        e.classList.remove(\"active\");\r\n      });\r\n    }\r\n\r\n    function toggleActiveClass(event) {\r\n      event.target.classList.toggle(\"active\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default new FilterButtons();\r\n","const API_URL = \"https://hp-api.herokuapp.com/api/characters/\";\r\n// const url2 = \"https://api.spaceflightnewsapi.net/v3/articles?_limit=20\";\r\n\r\nconst URL_STUDENTS = 'students';\r\n\r\nconst URL_HOUSE = [];\r\n\r\nexport { API_URL, URL_STUDENTS, URL_HOUSE };","export function getCamelcaseString(string) {\r\n    return string\r\n      .toLocaleLowerCase()\r\n      .trim()\r\n      .split(\" \")\r\n      .map((word, index) =>\r\n        index == 0 ? word : word[0].toUpperCase() + word.slice(1)\r\n      )\r\n      .join(\"\");\r\n}","import FilterButtons from '../FilterButtons';\r\nimport './App.css';\r\n\r\nclass App {\r\n    async render() {\r\n        await FilterButtons.render();\r\n        FilterButtons.eventListener();\r\n    }\r\n}\r\n\r\nexport default new App()","import App from \"./components/App\";\r\n\r\n(async () => {\r\n  await App.render();\r\n})();\r\n\r\n// getApiData.getData(API_URL)\r\n//     .then((data) => console.log(data))\r\n//     .catch((error) => console.log(error));"],"names":["$34ca104a53f98127$export$fe6e2b2c7c409978","getData","url","fetch","then","response","ok","Error","status","json","$d13dc42edb43e0c2$export$5238f8d369d375d5","filterButtons","document","getElementById","$db4538fbdc98ba62$export$60f482eeee475f66","name","tableHeader","sortButton","filterButton","dateOfBirth","house","wizard","ancestry","hogwartsStudent","hogwartsStaff","favorites","$9a0f253e7ae0c535$export$cac7147b2355f","addElementToArrayFromDataByKey","data","arr","key","forEach","el","includes","push","async","arrayFilterButtonNames","param","elelment","hasOwnProperty","unshift","toLowerCase","getFilterButtonNamesArray","Object","values","buttonsListMarkup","map","buttonName","string","toLocaleLowerCase","trim","split","word","index","toUpperCase","slice","join","innerHTML","querySelector","addEventListener","event","target","localName","currentTarget","querySelectorAll","e","classList","contains","remove","removeActiveClassFommButtons","toggle","toggleActiveClass","onButtonClick","$4d8b6aef94a206ca$export$2e2bcd8739ae039","$4cc532f00fbd4fe5$export$2e2bcd8739ae039","render","eventListener"],"version":3,"file":"index.9396c5a3.js.map"}